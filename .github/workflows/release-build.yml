name: "RELEASE Build"

on:
    push: 
#   # Only run this workflow manually from the Actions tab
#   workflow_dispatch:

jobs:
  build:
    name: "Build Release (JDK17)"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v8

      # - name: Extract version from tag
      #   run: echo "RELEASE_VERSION=${{ steps.branch-names.outputs.current_branch }}" >> $GITHUB_ENV
      - name: Extract version from tag
        run: echo "RELEASE_VERSION=${{ vars.NEXT_RELEASE }}" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: 'github'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven  

      - name: Set project version
        run: mvn versions:set -DnewVersion=${RELEASE_VERSION}

      - name: Build with Maven
        run: mvn clean install -Dmaven.test.skip=true

      # - run: mkdir staging && cp target/*.jar staging
      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: Package
      #     path: staging
        
      - name: Publish to GitHub Packages Apache Maven
        run: mvn --batch-mode  deploy -PgithubDeploy -Dmaven.test.skip=true
        env:
          GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password

      # - name: Set up Apache Maven Central
      #   uses: actions/setup-java@v4
      #   with: # running setup-java again overwrites the settings.xml
      #     distribution: 'temurin'
      #     java-version: '17'
      #     server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
      #     server-username: ${{ secrets.MAVEN_USERNAME }} # env variable for username in deploy
      #     server-password: ${{ secrets.MAVEN_CENTRAL_TOKEN }} # env variable for token in deploy
      #     gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
      #     gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }} # env variable for GPG private key passphrase

      # - name: Deploy to Maven Repository
      #   run: mvn --batch-mode deploy -PossrhDeploy -Dmaven.test.skip=true
      #   env:
      #     MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
      #     MAVEN_PASSWORD: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
      #     MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Add & Commit
        uses: EndBug/add-and-commit@v9.1.4
        with: 
          add: '["pom.xml", "remsfal-core/pom.xml", "remsfal-service/pom.xml"]'
          message: "Release version ${RELEASE_VERSION}"
          author_name: "Release Bot"
          author_email: "phonem_winterlich.0i@icloud.com"
          tag: "v${RELEASE_VERSION}"
  
      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        with: 
          artifacts: "remsfal-core/target/remsfal-core-${RELEASE_VERSION}.jar, remsfal-service/target/remsfal-service-${RELEASE_VERSION}.jar"
          tag: "v${RELEASE_VERSION}"
          body: "Release version ${RELEASE_VERSION}"
          allowUpdates: true